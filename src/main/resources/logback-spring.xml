<?xml version="1.0" encoding="UTF-8"?>
<!-- 定义 每隔10秒中扫描该文件 -->
<configuration scan="true" scanPeriod="10 seconds" debug="true">

  <!--在Spring配置文件中定义日志输出目录及日志文件名-->
  <springProperty scope="context" name="LOG_PATH" source="logging.file.path"/>
  <springProperty scope="context" name="LOG_NAME" source="logging.file.name"/>

  <!-- 日志输出格式 -->
  <!-- 控制台日志格式 -->
  <property name="STD_PATTERN" value="[%5p][%d{HH:mm:ss.SSS}][%15.15t][%-39.39class{39}:%-4L] %m%n" />
  <!-- 文件日志格式 -->
  <property name="FILE_PATTERN" value="[%p][%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ,Asia/Shanghai}][%c:%L] %m%n" />

  <!--日志保留的份数：14份-->
  <property name="MAX_HISTORY" value="14" />

  <!-- 控制台 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>${STD_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
  </appender>

  <!-- 输出 INFO 及以上级别 -->
  <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>
    <encoder>
      <pattern>${FILE_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH}/${LOG_NAME}.%d{yyyy-MM-dd}</fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
  </appender>

  <!-- 输出 WARN 和 ERROR 日志 -->
  <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
    <encoder>
      <pattern>${FILE_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH}/warn-${LOG_NAME}.%d{yyyy-MM-dd}</fileNamePattern>
      <maxHistory>${MAX_HISTORY}</maxHistory>
    </rollingPolicy>
  </appender>

  <!-- INFO 异步输出 -->
  <appender name="INFO_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <queueSize>256</queueSize>
    <!-- 添加附加的appender,最多只能添加一个 -->
    <appender-ref ref="INFO_LOG"/>
  </appender>

  <!-- INFO 异步输出 -->
  <appender name="WARN_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <queueSize>256</queueSize>
    <!-- 添加附加的appender,最多只能添加一个 -->
    <appender-ref ref="WARN_LOG"/>
  </appender>

  <logger name="org.springframework.boot.autoconfigure" level="WARN"/>

  <springProfile name="test, prod">
    <root>
      <level value="INFO"/>
      <appender-ref ref="INFO_ASYNC" />
      <appender-ref ref="WARN_ASYNC" />
    </root>
  </springProfile>
  <springProfile name="dev">
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="STDOUT"/>
    </root>
  </springProfile>
</configuration>